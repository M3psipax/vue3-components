{"version":3,"file":"vue3-components5.js","sources":["../../../../node_modules/input-format/modules/helpers.js"],"sourcesContent":["function _createForOfIteratorHelperLoose(o, allowArrayLike) { var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"]; if (it) return (it = it.call(o)).next.bind(it); if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; return function () { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\n// Counts all occurences of a symbol in a string\nexport function count_occurences(symbol, string) {\n  var count = 0; // Using `.split('')` here instead of normal `for ... of`\n  // because the importing application doesn't neccessarily include an ES6 polyfill.\n  // The `.split('')` approach discards \"exotic\" UTF-8 characters\n  // (the ones consisting of four bytes)\n  // but template placeholder characters don't fall into that range\n  // so skipping such miscellaneous \"exotic\" characters\n  // won't matter here for just counting placeholder character occurrences.\n\n  for (var _iterator = _createForOfIteratorHelperLoose(string.split('')), _step; !(_step = _iterator()).done;) {\n    var character = _step.value;\n\n    if (character === symbol) {\n      count++;\n    }\n  }\n\n  return count;\n}\n//# sourceMappingURL=helpers.js.map"],"names":["_createForOfIteratorHelperLoose","o","allowArrayLike","it","_unsupportedIterableToArray","i","minLen","_arrayLikeToArray","n","arr","len","arr2","count_occurences","symbol","string","count","_iterator","_step","character"],"mappings":"AAAA,SAASA,EAAgCC,GAAGC,GAAgB;AAAE,MAAIC,IAAK,OAAO,SAAW,OAAeF,EAAE,OAAO,aAAaA,EAAE;AAAe,MAAIE;AAAI,YAAQA,IAAKA,EAAG,KAAKF,CAAC,GAAG,KAAK,KAAKE,CAAE;AAAG,MAAI,MAAM,QAAQF,CAAC,MAAME,IAAKC,EAA4BH,CAAC,MAAMC,KAAkBD,KAAK,OAAOA,EAAE,UAAW,UAAU;AAAE,IAAIE,MAAIF,IAAIE;AAAI,QAAIE,IAAI;AAAG,WAAO,WAAY;AAAE,aAAIA,KAAKJ,EAAE,SAAe,EAAE,MAAM,GAAM,IAAS,EAAE,MAAM,IAAO,OAAOA,EAAEI,KAAI;AAAA,IAAG;AAAA,EAAK;AAAC,QAAM,IAAI,UAAU;AAAA,mFAAuI;AAAI;AAE5lB,SAASD,EAA4BH,GAAGK,GAAQ;AAAE,MAAI,EAACL,GAAW;AAAA,QAAI,OAAOA,KAAM;AAAU,aAAOM,EAAkBN,GAAGK,CAAM;AAAG,QAAIE,IAAI,OAAO,UAAU,SAAS,KAAKP,CAAC,EAAE,MAAM,GAAG,EAAE;AAAgE,QAAzDO,MAAM,YAAYP,EAAE,gBAAaO,IAAIP,EAAE,YAAY,OAAUO,MAAM,SAASA,MAAM;AAAO,aAAO,MAAM,KAAKP,CAAC;AAAG,QAAIO,MAAM,eAAe,2CAA2C,KAAKA,CAAC;AAAG,aAAOD,EAAkBN,GAAGK,CAAM;AAAA;AAAI;AAEha,SAASC,EAAkBE,GAAKC,GAAK;AAAE,GAAIA,KAAO,QAAQA,IAAMD,EAAI,YAAQC,IAAMD,EAAI;AAAQ,WAASJ,IAAI,GAAGM,IAAO,IAAI,MAAMD,CAAG,GAAGL,IAAIK,GAAKL;AAAO,IAAAM,EAAKN,KAAKI,EAAIJ;AAAM,SAAOM;AAAO;AAGhL,SAASC,EAAiBC,GAAQC,GAAQ;AAS/C,WARIC,IAAQ,GAQHC,IAAYhB,EAAgCc,EAAO,MAAM,EAAE,CAAC,GAAGG,GAAO,EAAEA,IAAQD,EAAS,GAAI,QAAO;AAC3G,QAAIE,IAAYD,EAAM;AAEtB,IAAIC,MAAcL,KAChBE;AAAA,EAEH;AAED,SAAOA;AACT;"}